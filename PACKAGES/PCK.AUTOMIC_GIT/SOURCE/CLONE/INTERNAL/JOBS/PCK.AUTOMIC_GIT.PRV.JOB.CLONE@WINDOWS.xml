<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>12.2.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>F</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <deactivation_condition>ANY_OK</deactivation_condition>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_GIT.PRV.JOB.CLONE@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <description>GIT Clone</description>
         <versioning_id>-1870921857</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INC PCK.ITPA_SHARED.PUB.INCLUDE.ATTACH

! Normalize path
:DEFINE &STRING_ARR#,string,30
:INC PCK.AUTOMIC_FILESYSTEM.PUB.INCLUDE.NORMALIZE_PATH "UC4RB_CONVERTED_STRING" = "UC4RB_GIT_WORKING_DIRECTORY"

! Header Parameter Validation
@echo off
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.PARAM_VALIDATION

:SET &UC4RB_LOGGING_PARAMETER# = "Username"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_GIT_USERNAME#
:SET &UC4RB_LOGGING_PARAMETER# = "Remote Repository Name"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_GIT_REPO#
:SET &UC4RB_LOGGING_PARAMETER# = "Local Repository Name"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_GIT_REPO_LOCAL#
:SET &UC4RB_LOGGING_PARAMETER# = "Server URI"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_GIT_URI#
:SET &UC4RB_LOGGING_PARAMETER# = "Working copy Directory"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_GIT_WORKING_DIRECTORY#
:SET &UC4RB_LOGGING_PARAMETER# = "Additional Options"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.PARAM &UC4RB_LOGGING_PARAMETER_VAL# = &UC4RB_GIT_OPTIONS#

! Verify Working copy Directory
set /a errors=0 > nul
:SET &UC4RB_CHECKME# = &UC4RB_GIT_WORKING_DIRECTORY#
:INCLUDE PCK.AUTOMIC_FILESYSTEM.PUB.INCLUDE.CHECK_WINDOWS_CONSOLE_FILE_EXISTS
if %EXIST% == 0 (
:  SET &UC4RB_LOGGING_PARAMETER# = "Working copy Directory"
:  SET &UC4RB_LOGGING_ERROR# = "Working copy Directory '&UC4RB_GIT_WORKING_DIRECTORY#' doesn't exist."
:  INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.ERROR.PARAMETER
  set /a errors=1 > nul
)
if %ISFILE% == 1 (
:  SET &UC4RB_LOGGING_PARAMETER# = "Working copy Directory"
:  SET &UC4RB_LOGGING_ERROR# = "Working copy Directory '&UC4RB_GIT_WORKING_DIRECTORY#' is a file."
:  INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.ERROR.PARAMETER
  set /a errors=1 > nul
)

! stop execution if validation errors occurred
if %errors% gtr 0 (
  set retcode=%errors%
  goto :retcode
)

! Header Execution Validation
:INC PCK.ITPA_SHARED.PRV.INCLUDE.LOGGING.HEADER.EXECUTION
:INC PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN

! Clone a repository into a new directory
:INC PCK.AUTOMIC_GIT.PRV.INCLUDE.COMMAND
:SET &UC4RB_GIT_CMD# = "&UC4RB_GIT_CMD# clone"

! Add command options if specified
:INC PCK.AUTOMIC_GIT.PRV.INCLUDE.OPTIONS

! Decrypt password
:SET &UC4RB_ENCRYPTED_PASSWORD_TMP# = "&UC4RB_GIT_PASSWORD#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.DECRYPT_PASSWORD

! Add username and password if specified
:SET &UC4RB_GIT_PASSWORD# = "%UC4_DECRYPTED_PWD%"
:SET &UC4RB_GIT_PROTOCOL# = ""
:INC PCK.AUTOMIC_GIT.PRV.INCLUDE.CREDENTIALS

! Remove ending slash from URL
:INC PCK.AUTOMIC_GIT.PRV.INCLUDE.NORMALIZE_URL

! Add .git to URI and clone to a folder that matches the repository name
:IF &UC4RB_GIT_REPO_LOCAL# <> ""
:  SET &UC4RB_GIT_CMD# = '&UC4RB_GIT_CMD#/&UC4RB_GIT_REPO#.git "&UC4RB_GIT_REPO_LOCAL#"'
:ELSE
:  SET &UC4RB_GIT_CMD# = '&UC4RB_GIT_CMD#/&UC4RB_GIT_REPO#.git'
:ENDIF

cd /d "&UC4RB_GIT_WORKING_DIRECTORY#"
:INC PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_CMDLINE_CMD@WINDOWS
:IF &UC4RB_GIT_PROTOCOL# = "http" OR "https"
   &UC4RB_GIT_CMD# 2>nul
!   Status message
:  SET &UC4RB_LOGGING_INFO# = "******** GIT CLONE ACTION EXECUTED SUCCESSFULLY ********"
:  SET &UC4RB_LOGGING_ERROR# = "******** GIT CLONE ACTION FAILED ********"
:  SET &TEMP# = "Error may occurs because invalid username or password, repository not found or destination path already exist and is not an empty directory"
!  ------------------------------------------ Error Handling -----------------------------------------------------------------------------------------------------
:  INC PCK.AUTOMIC_GIT.PRV.INCLUDE.CHECK_JOBSTATUS
:ELSE
   &UC4RB_GIT_CMD#
:  INC PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_CMDLINE_CMD@WINDOWS
:ENDIF
]]></process>
      </row>
      <row>
         <pre_process>:INC PCK.ITPA_SHARED.PRV.INCLUDE.PREPARE_JOB</pre_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <activation_at_runtime>1</activation_at_runtime>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>0</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object></job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
